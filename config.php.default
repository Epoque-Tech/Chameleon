<?php
require_once('vendor/autoload.php');

use Epoque\Registry\Registry;


error_reporting(E_ERROR | E_PARSE | E_WARNING);
#(E_ERROR | E_PARSE | E_WARNING)


// Setup some constants.
define('APP_ROOT', __DIR__.'/');
define('WEB_ROOT', '/');
define('BOOTSTRAP_DIR', WEB_ROOT.'resources/bootstrap/3.3.1/');
define('BOOTSTRAP', BOOTSTRAP_DIR.'css/bootstrap.min.css');
define('BOOTSTRAP_JS', BOOTSTRAP_DIR.'js/bootstrap.min.js');
define('CSS_DIR', WEB_ROOT.'resources/css/');
define('HTML_DIR', 'resources/html/');
define('IMG_DIR', '/resources/img/');
define('JS_DIR', WEB_ROOT.'resources/js/');
define('JQUERY_UI_DIR', JS_DIR.'jquery-ui-1.11.4.custom/');
define('JQUERY', JS_DIR.'jquery-1.11.2.min.js');
define('JQUERY_UI', JQUERY_UI_DIR.'jquery-ui.min.js');
define('SITE_TITLE', '|proj_name|');


/**
 * Navigation/Views Configuration
 *      VIEWS_DIR
 *      Path to the directory with site's published content.
 *
 *      NAV_FILES
 *      Boolean, to show files from nav_root in site's navigation.
 *
 *      NAV_DIRS
 *      Boolean, to show directories from nav_root in site's navigation.
 *
 *      IGNORE_FILES
 *      Array of files/dirs to ignore in the navigation.
 *
 *      IGNORE_EXTS
 *      Array of file types by extension to ingore from nav_root.
 */
define('VIEWS_DIR', 'views/');
define('DEFAULT_VIEW', 'default.php');
define('NAV_FILES', 'yes');
define('NAV_DIRS', 'yes');
define('IGNORE_FILES', '404.php default.php');
define('IGNORE_EXTS', 'swp');


/**
 * MySQL settings
 *      DB_DRIVER       Sets driver used by Database.php.
 *      DB_NAME         The name of the database.
 *      DB_USER         The MySQL database username.
 *      DB_PASS         Password for the database user.
 */
define('DB_DRIVER', 'mysql');
define('DB_NAME', '|db_name|');
define('DB_USER', '|db_user|');
define('DB_PASS', '|db_pass|');
define('DB_HOST', '|db_host|');


// Dates Formatting
define('PUBDATE_FORMAT', 'M d, Y');
date_default_timezone_set('UTC');


// Add Logger to the Registry 
Registry::set(new Logger('chameleon.log'));
Registry::get('Monolog\Logger')->pushHandler(new StreamHandler(APP_ROOT.'log/chameleon.log', Logger::WARNING));
Registry::get('Monolog\Logger')->pushHandler(new StreamHandler(APP_ROOT.'log/chameleon.log', Logger::ERROR));

